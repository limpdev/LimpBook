import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as i,b as c,d as l,e as g,w as t,r as h,o as A,f as a}from"./app-Di3TgZ67.js";const B={};function y(u,s){const k=h("CodeTabs"),r=h("VPIcon"),p=h("VPPreview");return A(),o("div",null,[s[7]||(s[7]=i("p",null,"Plugins with icon support.",-1)),c(" more "),s[8]||(s[8]=i("h2",{id:"usage",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#usage"},[i("span",null,"Usage")])],-1)),l(k,{data:[{id:"TS"},{id:"JS"}],"tab-id":"language"},{title0:t(({value:e,isActive:n})=>s[0]||(s[0]=[a("TS")])),title1:t(({value:e,isActive:n})=>s[1]||(s[1]=[a("JS")])),tab0:t(({value:e,isActive:n})=>s[2]||(s[2]=[i("div",{class:"language-ts","data-highlighter":"shiki","data-ext":"ts",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-ts"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," MarkdownIt"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," from"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "markdown-it"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," { "),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"icon"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," } "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"from"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "@mdit/plugin-icon"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),i("span",{class:"line"}),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#E5C07B"}}," mdIt"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," ="),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," MarkdownIt"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"use"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"icon"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),a(`
`),i("span",{class:"line"}),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E5C07B"}},"mdIt"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"render"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"iPhone is made by ::apple::."'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")])])])],-1)])),tab1:t(({value:e,isActive:n})=>s[3]||(s[3]=[i("div",{class:"language-js","data-highlighter":"shiki","data-ext":"js",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-js"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#E5C07B"}}," MarkdownIt"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," ="),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," require"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"markdown-it"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," { "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#E5C07B"}},"icon"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," } "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," require"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"@mdit/plugin-icon"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),a(`
`),i("span",{class:"line"}),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"const"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#E5C07B"}}," mdIt"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," ="),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," MarkdownIt"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"use"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"icon"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")]),a(`
`),i("span",{class:"line"}),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E5C07B"}},"mdIt"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"render"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"iPhone is made by ::apple::."'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},");")])])])],-1)])),_:1}),s[9]||(s[9]=g(`<h2 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax"><span>Syntax</span></a></h2><p>Use <code>::icon classes::</code> to insert custom icons. By default the plugin will render a <code>&lt;i&gt;</code> tag with the given icon class. Any classes started with a <code>=</code> will be treated as a size definition, and <code>/</code> will be treated as a color definition:</p><div class="language-md" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-md"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- &lt;i class=&quot;icon1&quot; style=&quot;font-size:16px;color:red&quot; --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::icon1 =16 /red::</span></span></code></pre></div><p>If you are not satisfied with the default render, you can use <code>render</code> option to customize icon rendering:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> MarkdownIt</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;markdown-it&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">  fontAwesomeRender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">  icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">  iconfontRender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">  iconifyRender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;@mdit/plugin-icon&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> mdIt</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> MarkdownIt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // support for iconify</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  render</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> iconifyRender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // support for fontawesome</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  render</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> fontAwesomeRender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // support for iconfont</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  render</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> iconfontRender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // custom render</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  render</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">rawIcon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`&lt;span class=&quot;</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">rawIcon</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&gt;&lt;/span&gt;\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For the build-in helper and render function usage, see source code and related unit tests for more details:</p><ul><li><a href="https://github.com/mdit-plugins/mdit-plugins/tree/main/packages/icon/src/render.ts" target="_blank" rel="noopener noreferrer">src/render.ts</a></li><li><a href="https://github.com/mdit-plugins/mdit-plugins/tree/main/packages/icon/__tests__/render.ts" target="_blank" rel="noopener noreferrer">__tests__/render.ts</a></li><li><a href="https://github.com/mdit-plugins/mdit-plugins/tree/main/packages/icon/src/utils.ts" target="_blank" rel="noopener noreferrer">src/utils.ts</a></li><li><a href="https://github.com/mdit-plugins/mdit-plugins/tree/main/packages/icon/__tests__/utils.ts" target="_blank" rel="noopener noreferrer">__tests__/utils.ts</a></li></ul><div class="hint-container tip"><p class="hint-container-title">Why not markdownit-plugin-emoji?</p><p><code>markdownit-plugin-emoji</code> only supports converting known emoji codes to icons, while this plugin supports any custom icon classes.</p><p>This is useful when you are using it with font icon libraries like Font Awesome, Material Icons, etc.</p></div><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2>`,9)),l(p,{title:"Demo"},{content:t(()=>[i("p",null,[s[4]||(s[4]=a("iPhone is made by ")),l(r,{icon:"apple"}),s[5]||(s[5]=a("."))])]),code:t(()=>s[6]||(s[6]=[i("div",{class:"language-","data-highlighter":"shiki","data-ext":"",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",{class:"language-"},[i("span",{class:"line"},[i("span",null,"iPhone is made by ::apple::.")])])])],-1)])),_:1})])}const b=d(B,[["render",y]]),v=JSON.parse('{"path":"/icon.html","title":"@mdit/plugin-icon","lang":"en-US","frontmatter":{"title":"@mdit/plugin-icon","icon":"icons","description":"Plugins with icon support. Usage Syntax Use ::icon classes:: to insert custom icons. By default the plugin will render a <i> tag with the given icon class. Any classes started w...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"@mdit/plugin-icon\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-06T07:54:14.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://mdit-plugins.github.io/icon.html"}],["meta",{"property":"og:site_name","content":"Markdown It Plugins"}],["meta",{"property":"og:title","content":"@mdit/plugin-icon"}],["meta",{"property":"og:description","content":"Plugins with icon support. Usage Syntax Use ::icon classes:: to insert custom icons. By default the plugin will render a <i> tag with the given icon class. Any classes started w..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-06T07:54:14.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-06T07:54:14.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://mdit-plugins.github.io/zh/icon.html"}]]},"git":{"createdTime":1736638368000,"updatedTime":1749196454000,"contributors":[{"name":"Mister-Hope","username":"Mister-Hope","email":"mister-hope@outlook.com","commits":3,"avatar":"https://avatars.githubusercontent.com/Mister-Hope?v=4","url":"https://github.com/Mister-Hope"}],"changelog":[{"hash":"c28ee30701782714b3f8ea56263eb8144a219b2f","time":1749196454000,"email":"mister-hope@outlook.com","author":"Mister-Hope","message":"docs: update docs"},{"hash":"1ec7cb2515c280dcded4421b8e17917e9e1f1ab6","time":1736646475000,"email":"mister-hope@outlook.com","author":"Mister-Hope","message":"fix(icon): encode attrs"},{"hash":"6fc1c529622791d94691134eec5b35dcdabc4a42","time":1736638368000,"email":"mister-hope@outlook.com","author":"Mister-Hope","message":"feat: add plugin-icon (#74)"}]},"readingTime":{"minutes":0.94,"words":282},"filePathRelative":"icon.md","autoDesc":true}');export{b as comp,v as data};
